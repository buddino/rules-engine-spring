package it.unifi.dinfo.rulesengine.rules;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.gson.Gson;
import it.unifi.dinfo.rulesengine.amqp.GAIANotification;
import it.unifi.dinfo.rulesengine.amqp.SenderService;
import it.unifi.dinfo.rulesengine.api.WSController;
import it.unifi.dinfo.rulesengine.configuration.ContextProvider;
import org.apache.log4j.Logger;
import org.easyrules.annotation.Action;
import org.easyrules.annotation.Condition;
import org.easyrules.annotation.Rule;
import org.mapdb.DB;
import org.mapdb.HTreeMap;
import org.mapdb.Serializer;

import java.util.Date;


@Rule
public class ExploitNaturalLight {
    Logger LOGGER = Logger.getLogger(this.getClass());
    Long exceedings = 0L;
    Long exceedingsThreshold = 3L;

    DB embeddedDB = ContextProvider.getBean(DB.class);
    SenderService senderService = ContextProvider.getBean(SenderService.class);
    WSController ws = ContextProvider.getBean(WSController.class);
    HTreeMap<String, Long>  exceedingsMap = embeddedDB.hashMap("exeedings", Serializer.STRING, Serializer.LONG).open();

    @Condition
    public boolean condition() {
        exceedings = exceedingsMap.get("gaia-prato/gw1/weather/light");
        return exceedings > exceedingsThreshold;
    }

    @Action
    public void action() {
        exceedingsMap.put("gaia-prato/gw1/weather/light", 0L);
        LOGGER.info(String.format("Exceedings (%d) greater than threshold (%d)", exceedings, exceedingsThreshold));
        GAIANotification notification = new GAIANotification();
        notification.setTimestamp(new Date().getTime());
        notification.setRule(this.getClass().toString());
        notification.setDescription(String.format("Exceedings (%d) greater than threshold (%d)", exceedings, exceedingsThreshold));
        ObjectMapper mapper = new ObjectMapper();
        try {
            String json = mapper.writeValueAsString(notification);
            ws.pushNotification(json);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
        }
        senderService.sendNotification(notification);
    }
}
